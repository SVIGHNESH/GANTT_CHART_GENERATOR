{"ast":null,"code":"var _jsxFileName = \"/home/vighnesh/Desktop/Projects/AnotherECommerce/GANTT-CHART-GENERATOR/frontend/src/components/GanttChart.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport { Gantt } from 'frappe-gantt';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GanttChart = ({\n  tasks,\n  onTaskUpdate\n}) => {\n  _s();\n  const ganttRef = useRef(null);\n  const ganttInstance = useRef(null);\n  const [viewMode, setViewMode] = useState('Day');\n  useEffect(() => {\n    if (ganttRef.current && tasks && tasks.length > 0) {\n      // Clean up previous instance\n      if (ganttInstance.current) {\n        ganttInstance.current = null;\n      }\n\n      // Clear the container\n      ganttRef.current.innerHTML = '';\n\n      // Transform tasks to Frappe Gantt format\n      const formattedTasks = tasks.map(task => ({\n        id: task.id,\n        name: task.name,\n        start: task.start,\n        end: task.end,\n        progress: task.progress || 0,\n        dependencies: task.dependencies ? task.dependencies.join(', ') : '',\n        custom_class: task.custom_class || ''\n      }));\n      try {\n        // Create new Gantt instance\n        ganttInstance.current = new Gantt(ganttRef.current, formattedTasks, {\n          header_height: 50,\n          column_width: 30,\n          step: 24,\n          view_modes: ['Quarter Day', 'Half Day', 'Day', 'Week', 'Month'],\n          bar_height: 20,\n          bar_corner_radius: 3,\n          arrow_curve: 5,\n          padding: 18,\n          view_mode: viewMode,\n          date_format: 'YYYY-MM-DD',\n          custom_popup_html: function (task) {\n            const start_date = new Date(task.start).toLocaleDateString();\n            const end_date = new Date(task.end).toLocaleDateString();\n            return `\n              <div class=\"gantt-popup\">\n                <h3>${task.name}</h3>\n                <p><strong>Start:</strong> ${start_date}</p>\n                <p><strong>End:</strong> ${end_date}</p>\n                <p><strong>Progress:</strong> ${task.progress}%</p>\n                ${task.dependencies ? `<p><strong>Dependencies:</strong> ${task.dependencies}</p>` : ''}\n              </div>\n            `;\n          },\n          on_click: function (task) {\n            console.log('Task clicked:', task);\n          },\n          on_date_change: function (task, start, end) {\n            if (onTaskUpdate) {\n              onTaskUpdate(task.id, {\n                start: start.toISOString().split('T')[0],\n                end: end.toISOString().split('T')[0]\n              });\n            }\n          },\n          on_progress_change: function (task, progress) {\n            if (onTaskUpdate) {\n              onTaskUpdate(task.id, {\n                progress\n              });\n            }\n          },\n          on_view_change: function (mode) {\n            setViewMode(mode);\n          }\n        });\n      } catch (error) {\n        console.error('Error creating Gantt chart:', error);\n      }\n    }\n\n    // Cleanup function\n    return () => {\n      if (ganttInstance.current) {\n        ganttInstance.current = null;\n      }\n    };\n  }, [tasks, viewMode, onTaskUpdate]);\n  const handleViewModeChange = mode => {\n    setViewMode(mode);\n    if (ganttInstance.current) {\n      ganttInstance.current.change_view_mode(mode);\n    }\n  };\n  if (!tasks || tasks.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"gantt-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"empty-state\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"No tasks to display\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Add some tasks to see the Gantt chart\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"gantt-wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"gantt-controls\",\n      style: {\n        marginBottom: '1rem'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        style: {\n          marginRight: '1rem',\n          fontWeight: '500'\n        },\n        children: \"View Mode:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this), ['Quarter Day', 'Half Day', 'Day', 'Week', 'Month'].map(mode => /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `btn ${viewMode === mode ? 'btn-primary' : 'btn-secondary'}`,\n        onClick: () => handleViewModeChange(mode),\n        style: {\n          marginRight: '0.5rem'\n        },\n        children: mode\n      }, mode, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"gantt-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: ganttRef,\n        style: {\n          minHeight: '400px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"style\", {\n      children: `\n        .gantt-popup {\n          padding: 1rem;\n          background: white;\n          border-radius: 8px;\n          box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);\n          max-width: 250px;\n        }\n        .gantt-popup h3 {\n          margin: 0 0 0.5rem 0;\n          color: #2d3748;\n          font-size: 1.1rem;\n        }\n        .gantt-popup p {\n          margin: 0.25rem 0;\n          color: #4a5568;\n          font-size: 0.9rem;\n        }\n        .gantt .bar {\n          fill: #667eea;\n        }\n        .gantt .bar-progress {\n          fill: #48bb78;\n        }\n        .gantt .bar-invalid {\n          fill: #e53e3e;\n        }\n        .gantt .bar-label {\n          fill: white;\n          font-weight: 500;\n        }\n      `\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 108,\n    columnNumber: 5\n  }, this);\n};\n_s(GanttChart, \"+t22tgMqnVpJk8zterBwzL+togA=\");\n_c = GanttChart;\nexport default GanttChart;\nvar _c;\n$RefreshReg$(_c, \"GanttChart\");","map":{"version":3,"names":["React","useEffect","useRef","useState","Gantt","jsxDEV","_jsxDEV","GanttChart","tasks","onTaskUpdate","_s","ganttRef","ganttInstance","viewMode","setViewMode","current","length","innerHTML","formattedTasks","map","task","id","name","start","end","progress","dependencies","join","custom_class","header_height","column_width","step","view_modes","bar_height","bar_corner_radius","arrow_curve","padding","view_mode","date_format","custom_popup_html","start_date","Date","toLocaleDateString","end_date","on_click","console","log","on_date_change","toISOString","split","on_progress_change","on_view_change","mode","error","handleViewModeChange","change_view_mode","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","marginBottom","marginRight","fontWeight","onClick","ref","minHeight","_c","$RefreshReg$"],"sources":["/home/vighnesh/Desktop/Projects/AnotherECommerce/GANTT-CHART-GENERATOR/frontend/src/components/GanttChart.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport { Gantt } from 'frappe-gantt';\n\nconst GanttChart = ({ tasks, onTaskUpdate }) => {\n  const ganttRef = useRef(null);\n  const ganttInstance = useRef(null);\n  const [viewMode, setViewMode] = useState('Day');\n\n  useEffect(() => {\n    if (ganttRef.current && tasks && tasks.length > 0) {\n      // Clean up previous instance\n      if (ganttInstance.current) {\n        ganttInstance.current = null;\n      }\n\n      // Clear the container\n      ganttRef.current.innerHTML = '';\n\n      // Transform tasks to Frappe Gantt format\n      const formattedTasks = tasks.map(task => ({\n        id: task.id,\n        name: task.name,\n        start: task.start,\n        end: task.end,\n        progress: task.progress || 0,\n        dependencies: task.dependencies ? task.dependencies.join(', ') : '',\n        custom_class: task.custom_class || '',\n      }));\n\n      try {\n        // Create new Gantt instance\n        ganttInstance.current = new Gantt(ganttRef.current, formattedTasks, {\n          header_height: 50,\n          column_width: 30,\n          step: 24,\n          view_modes: ['Quarter Day', 'Half Day', 'Day', 'Week', 'Month'],\n          bar_height: 20,\n          bar_corner_radius: 3,\n          arrow_curve: 5,\n          padding: 18,\n          view_mode: viewMode,\n          date_format: 'YYYY-MM-DD',\n          custom_popup_html: function(task) {\n            const start_date = new Date(task.start).toLocaleDateString();\n            const end_date = new Date(task.end).toLocaleDateString();\n            return `\n              <div class=\"gantt-popup\">\n                <h3>${task.name}</h3>\n                <p><strong>Start:</strong> ${start_date}</p>\n                <p><strong>End:</strong> ${end_date}</p>\n                <p><strong>Progress:</strong> ${task.progress}%</p>\n                ${task.dependencies ? `<p><strong>Dependencies:</strong> ${task.dependencies}</p>` : ''}\n              </div>\n            `;\n          },\n          on_click: function (task) {\n            console.log('Task clicked:', task);\n          },\n          on_date_change: function (task, start, end) {\n            if (onTaskUpdate) {\n              onTaskUpdate(task.id, {\n                start: start.toISOString().split('T')[0],\n                end: end.toISOString().split('T')[0]\n              });\n            }\n          },\n          on_progress_change: function (task, progress) {\n            if (onTaskUpdate) {\n              onTaskUpdate(task.id, { progress });\n            }\n          },\n          on_view_change: function (mode) {\n            setViewMode(mode);\n          }\n        });\n      } catch (error) {\n        console.error('Error creating Gantt chart:', error);\n      }\n    }\n\n    // Cleanup function\n    return () => {\n      if (ganttInstance.current) {\n        ganttInstance.current = null;\n      }\n    };\n  }, [tasks, viewMode, onTaskUpdate]);\n\n  const handleViewModeChange = (mode) => {\n    setViewMode(mode);\n    if (ganttInstance.current) {\n      ganttInstance.current.change_view_mode(mode);\n    }\n  };\n\n  if (!tasks || tasks.length === 0) {\n    return (\n      <div className=\"gantt-container\">\n        <div className=\"empty-state\">\n          <h3>No tasks to display</h3>\n          <p>Add some tasks to see the Gantt chart</p>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"gantt-wrapper\">\n      <div className=\"gantt-controls\" style={{ marginBottom: '1rem' }}>\n        <label style={{ marginRight: '1rem', fontWeight: '500' }}>\n          View Mode:\n        </label>\n        {['Quarter Day', 'Half Day', 'Day', 'Week', 'Month'].map(mode => (\n          <button\n            key={mode}\n            className={`btn ${viewMode === mode ? 'btn-primary' : 'btn-secondary'}`}\n            onClick={() => handleViewModeChange(mode)}\n            style={{ marginRight: '0.5rem' }}\n          >\n            {mode}\n          </button>\n        ))}\n      </div>\n      <div className=\"gantt-container\">\n        <div ref={ganttRef} style={{ minHeight: '400px' }}></div>\n      </div>\n      <style>{`\n        .gantt-popup {\n          padding: 1rem;\n          background: white;\n          border-radius: 8px;\n          box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);\n          max-width: 250px;\n        }\n        .gantt-popup h3 {\n          margin: 0 0 0.5rem 0;\n          color: #2d3748;\n          font-size: 1.1rem;\n        }\n        .gantt-popup p {\n          margin: 0.25rem 0;\n          color: #4a5568;\n          font-size: 0.9rem;\n        }\n        .gantt .bar {\n          fill: #667eea;\n        }\n        .gantt .bar-progress {\n          fill: #48bb78;\n        }\n        .gantt .bar-invalid {\n          fill: #e53e3e;\n        }\n        .gantt .bar-label {\n          fill: white;\n          font-weight: 500;\n        }\n      `}</style>\n    </div>\n  );\n};\n\nexport default GanttChart;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AAC1D,SAASC,KAAK,QAAQ,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErC,MAAMC,UAAU,GAAGA,CAAC;EAAEC,KAAK;EAAEC;AAAa,CAAC,KAAK;EAAAC,EAAA;EAC9C,MAAMC,QAAQ,GAAGT,MAAM,CAAC,IAAI,CAAC;EAC7B,MAAMU,aAAa,GAAGV,MAAM,CAAC,IAAI,CAAC;EAClC,MAAM,CAACW,QAAQ,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EAE/CF,SAAS,CAAC,MAAM;IACd,IAAIU,QAAQ,CAACI,OAAO,IAAIP,KAAK,IAAIA,KAAK,CAACQ,MAAM,GAAG,CAAC,EAAE;MACjD;MACA,IAAIJ,aAAa,CAACG,OAAO,EAAE;QACzBH,aAAa,CAACG,OAAO,GAAG,IAAI;MAC9B;;MAEA;MACAJ,QAAQ,CAACI,OAAO,CAACE,SAAS,GAAG,EAAE;;MAE/B;MACA,MAAMC,cAAc,GAAGV,KAAK,CAACW,GAAG,CAACC,IAAI,KAAK;QACxCC,EAAE,EAAED,IAAI,CAACC,EAAE;QACXC,IAAI,EAAEF,IAAI,CAACE,IAAI;QACfC,KAAK,EAAEH,IAAI,CAACG,KAAK;QACjBC,GAAG,EAAEJ,IAAI,CAACI,GAAG;QACbC,QAAQ,EAAEL,IAAI,CAACK,QAAQ,IAAI,CAAC;QAC5BC,YAAY,EAAEN,IAAI,CAACM,YAAY,GAAGN,IAAI,CAACM,YAAY,CAACC,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE;QACnEC,YAAY,EAAER,IAAI,CAACQ,YAAY,IAAI;MACrC,CAAC,CAAC,CAAC;MAEH,IAAI;QACF;QACAhB,aAAa,CAACG,OAAO,GAAG,IAAIX,KAAK,CAACO,QAAQ,CAACI,OAAO,EAAEG,cAAc,EAAE;UAClEW,aAAa,EAAE,EAAE;UACjBC,YAAY,EAAE,EAAE;UAChBC,IAAI,EAAE,EAAE;UACRC,UAAU,EAAE,CAAC,aAAa,EAAE,UAAU,EAAE,KAAK,EAAE,MAAM,EAAE,OAAO,CAAC;UAC/DC,UAAU,EAAE,EAAE;UACdC,iBAAiB,EAAE,CAAC;UACpBC,WAAW,EAAE,CAAC;UACdC,OAAO,EAAE,EAAE;UACXC,SAAS,EAAExB,QAAQ;UACnByB,WAAW,EAAE,YAAY;UACzBC,iBAAiB,EAAE,SAAAA,CAASnB,IAAI,EAAE;YAChC,MAAMoB,UAAU,GAAG,IAAIC,IAAI,CAACrB,IAAI,CAACG,KAAK,CAAC,CAACmB,kBAAkB,CAAC,CAAC;YAC5D,MAAMC,QAAQ,GAAG,IAAIF,IAAI,CAACrB,IAAI,CAACI,GAAG,CAAC,CAACkB,kBAAkB,CAAC,CAAC;YACxD,OAAO;AACnB;AACA,sBAAsBtB,IAAI,CAACE,IAAI;AAC/B,6CAA6CkB,UAAU;AACvD,2CAA2CG,QAAQ;AACnD,gDAAgDvB,IAAI,CAACK,QAAQ;AAC7D,kBAAkBL,IAAI,CAACM,YAAY,GAAG,qCAAqCN,IAAI,CAACM,YAAY,MAAM,GAAG,EAAE;AACvG;AACA,aAAa;UACH,CAAC;UACDkB,QAAQ,EAAE,SAAAA,CAAUxB,IAAI,EAAE;YACxByB,OAAO,CAACC,GAAG,CAAC,eAAe,EAAE1B,IAAI,CAAC;UACpC,CAAC;UACD2B,cAAc,EAAE,SAAAA,CAAU3B,IAAI,EAAEG,KAAK,EAAEC,GAAG,EAAE;YAC1C,IAAIf,YAAY,EAAE;cAChBA,YAAY,CAACW,IAAI,CAACC,EAAE,EAAE;gBACpBE,KAAK,EAAEA,KAAK,CAACyB,WAAW,CAAC,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;gBACxCzB,GAAG,EAAEA,GAAG,CAACwB,WAAW,CAAC,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;cACrC,CAAC,CAAC;YACJ;UACF,CAAC;UACDC,kBAAkB,EAAE,SAAAA,CAAU9B,IAAI,EAAEK,QAAQ,EAAE;YAC5C,IAAIhB,YAAY,EAAE;cAChBA,YAAY,CAACW,IAAI,CAACC,EAAE,EAAE;gBAAEI;cAAS,CAAC,CAAC;YACrC;UACF,CAAC;UACD0B,cAAc,EAAE,SAAAA,CAAUC,IAAI,EAAE;YAC9BtC,WAAW,CAACsC,IAAI,CAAC;UACnB;QACF,CAAC,CAAC;MACJ,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdR,OAAO,CAACQ,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;MACrD;IACF;;IAEA;IACA,OAAO,MAAM;MACX,IAAIzC,aAAa,CAACG,OAAO,EAAE;QACzBH,aAAa,CAACG,OAAO,GAAG,IAAI;MAC9B;IACF,CAAC;EACH,CAAC,EAAE,CAACP,KAAK,EAAEK,QAAQ,EAAEJ,YAAY,CAAC,CAAC;EAEnC,MAAM6C,oBAAoB,GAAIF,IAAI,IAAK;IACrCtC,WAAW,CAACsC,IAAI,CAAC;IACjB,IAAIxC,aAAa,CAACG,OAAO,EAAE;MACzBH,aAAa,CAACG,OAAO,CAACwC,gBAAgB,CAACH,IAAI,CAAC;IAC9C;EACF,CAAC;EAED,IAAI,CAAC5C,KAAK,IAAIA,KAAK,CAACQ,MAAM,KAAK,CAAC,EAAE;IAChC,oBACEV,OAAA;MAAKkD,SAAS,EAAC,iBAAiB;MAAAC,QAAA,eAC9BnD,OAAA;QAAKkD,SAAS,EAAC,aAAa;QAAAC,QAAA,gBAC1BnD,OAAA;UAAAmD,QAAA,EAAI;QAAmB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAC5BvD,OAAA;UAAAmD,QAAA,EAAG;QAAqC;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACzC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAEV;EAEA,oBACEvD,OAAA;IAAKkD,SAAS,EAAC,eAAe;IAAAC,QAAA,gBAC5BnD,OAAA;MAAKkD,SAAS,EAAC,gBAAgB;MAACM,KAAK,EAAE;QAAEC,YAAY,EAAE;MAAO,CAAE;MAAAN,QAAA,gBAC9DnD,OAAA;QAAOwD,KAAK,EAAE;UAAEE,WAAW,EAAE,MAAM;UAAEC,UAAU,EAAE;QAAM,CAAE;QAAAR,QAAA,EAAC;MAE1D;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,EACP,CAAC,aAAa,EAAE,UAAU,EAAE,KAAK,EAAE,MAAM,EAAE,OAAO,CAAC,CAAC1C,GAAG,CAACiC,IAAI,iBAC3D9C,OAAA;QAEEkD,SAAS,EAAE,OAAO3C,QAAQ,KAAKuC,IAAI,GAAG,aAAa,GAAG,eAAe,EAAG;QACxEc,OAAO,EAAEA,CAAA,KAAMZ,oBAAoB,CAACF,IAAI,CAAE;QAC1CU,KAAK,EAAE;UAAEE,WAAW,EAAE;QAAS,CAAE;QAAAP,QAAA,EAEhCL;MAAI,GALAA,IAAI;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAMH,CACT,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eACNvD,OAAA;MAAKkD,SAAS,EAAC,iBAAiB;MAAAC,QAAA,eAC9BnD,OAAA;QAAK6D,GAAG,EAAExD,QAAS;QAACmD,KAAK,EAAE;UAAEM,SAAS,EAAE;QAAQ;MAAE;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtD,CAAC,eACNvD,OAAA;MAAAmD,QAAA,EAAQ;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACP,CAAC;AAEV,CAAC;AAACnD,EAAA,CA7JIH,UAAU;AAAA8D,EAAA,GAAV9D,UAAU;AA+JhB,eAAeA,UAAU;AAAC,IAAA8D,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}