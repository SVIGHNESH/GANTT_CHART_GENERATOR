{"ast":null,"code":"import { createSVG } from './svg_utils';\nexport default class Arrow {\n  constructor(gantt, from_task, to_task) {\n    this.gantt = gantt;\n    this.from_task = from_task;\n    this.to_task = to_task;\n    this.calculate_path();\n    this.draw();\n  }\n  calculate_path() {\n    let start_x = this.from_task.$bar.getX() + this.from_task.$bar.getWidth() / 2;\n    const condition = () => this.to_task.$bar.getX() < start_x + this.gantt.options.padding && start_x > this.from_task.$bar.getX() + this.gantt.options.padding;\n    while (condition()) {\n      start_x -= 10;\n    }\n    const start_y = this.gantt.options.header_height + this.gantt.options.bar_height + (this.gantt.options.padding + this.gantt.options.bar_height) * this.from_task.task._index + this.gantt.options.padding;\n    const end_x = this.to_task.$bar.getX() - this.gantt.options.padding / 2;\n    const end_y = this.gantt.options.header_height + this.gantt.options.bar_height / 2 + (this.gantt.options.padding + this.gantt.options.bar_height) * this.to_task.task._index + this.gantt.options.padding;\n    const from_is_below_to = this.from_task.task._index > this.to_task.task._index;\n    const curve = this.gantt.options.arrow_curve;\n    const clockwise = from_is_below_to ? 1 : 0;\n    const curve_y = from_is_below_to ? -curve : curve;\n    const offset = from_is_below_to ? end_y + this.gantt.options.arrow_curve : end_y - this.gantt.options.arrow_curve;\n    this.path = `\n            M ${start_x} ${start_y}\n            V ${offset}\n            a ${curve} ${curve} 0 0 ${clockwise} ${curve} ${curve_y}\n            L ${end_x} ${end_y}\n            m -5 -5\n            l 5 5\n            l -5 5`;\n    if (this.to_task.$bar.getX() < this.from_task.$bar.getX() + this.gantt.options.padding) {\n      const down_1 = this.gantt.options.padding / 2 - curve;\n      const down_2 = this.to_task.$bar.getY() + this.to_task.$bar.getHeight() / 2 - curve_y;\n      const left = this.to_task.$bar.getX() - this.gantt.options.padding;\n      this.path = `\n                M ${start_x} ${start_y}\n                v ${down_1}\n                a ${curve} ${curve} 0 0 1 -${curve} ${curve}\n                H ${left}\n                a ${curve} ${curve} 0 0 ${clockwise} -${curve} ${curve_y}\n                V ${down_2}\n                a ${curve} ${curve} 0 0 ${clockwise} ${curve} ${curve_y}\n                L ${end_x} ${end_y}\n                m -5 -5\n                l 5 5\n                l -5 5`;\n    }\n  }\n  draw() {\n    this.element = createSVG('path', {\n      d: this.path,\n      'data-from': this.from_task.task.id,\n      'data-to': this.to_task.task.id\n    });\n  }\n  update() {\n    this.calculate_path();\n    this.element.setAttribute('d', this.path);\n  }\n}","map":{"version":3,"names":["createSVG","Arrow","constructor","gantt","from_task","to_task","calculate_path","draw","start_x","$bar","getX","getWidth","condition","options","padding","start_y","header_height","bar_height","task","_index","end_x","end_y","from_is_below_to","curve","arrow_curve","clockwise","curve_y","offset","path","down_1","down_2","getY","getHeight","left","element","d","id","update","setAttribute"],"sources":["/home/vighnesh/Desktop/Projects/AnotherECommerce/GANTT-CHART-GENERATOR/frontend/node_modules/frappe-gantt/src/arrow.js"],"sourcesContent":["import { createSVG } from './svg_utils';\n\nexport default class Arrow {\n    constructor(gantt, from_task, to_task) {\n        this.gantt = gantt;\n        this.from_task = from_task;\n        this.to_task = to_task;\n\n        this.calculate_path();\n        this.draw();\n    }\n\n    calculate_path() {\n        let start_x =\n            this.from_task.$bar.getX() + this.from_task.$bar.getWidth() / 2;\n\n        const condition = () =>\n            this.to_task.$bar.getX() < start_x + this.gantt.options.padding &&\n            start_x > this.from_task.$bar.getX() + this.gantt.options.padding;\n\n        while (condition()) {\n            start_x -= 10;\n        }\n\n        const start_y =\n            this.gantt.options.header_height +\n            this.gantt.options.bar_height +\n            (this.gantt.options.padding + this.gantt.options.bar_height) *\n                this.from_task.task._index +\n            this.gantt.options.padding;\n\n        const end_x = this.to_task.$bar.getX() - this.gantt.options.padding / 2;\n        const end_y =\n            this.gantt.options.header_height +\n            this.gantt.options.bar_height / 2 +\n            (this.gantt.options.padding + this.gantt.options.bar_height) *\n                this.to_task.task._index +\n            this.gantt.options.padding;\n\n        const from_is_below_to =\n            this.from_task.task._index > this.to_task.task._index;\n        const curve = this.gantt.options.arrow_curve;\n        const clockwise = from_is_below_to ? 1 : 0;\n        const curve_y = from_is_below_to ? -curve : curve;\n        const offset = from_is_below_to\n            ? end_y + this.gantt.options.arrow_curve\n            : end_y - this.gantt.options.arrow_curve;\n\n        this.path = `\n            M ${start_x} ${start_y}\n            V ${offset}\n            a ${curve} ${curve} 0 0 ${clockwise} ${curve} ${curve_y}\n            L ${end_x} ${end_y}\n            m -5 -5\n            l 5 5\n            l -5 5`;\n\n        if (\n            this.to_task.$bar.getX() <\n            this.from_task.$bar.getX() + this.gantt.options.padding\n        ) {\n            const down_1 = this.gantt.options.padding / 2 - curve;\n            const down_2 =\n                this.to_task.$bar.getY() +\n                this.to_task.$bar.getHeight() / 2 -\n                curve_y;\n            const left = this.to_task.$bar.getX() - this.gantt.options.padding;\n\n            this.path = `\n                M ${start_x} ${start_y}\n                v ${down_1}\n                a ${curve} ${curve} 0 0 1 -${curve} ${curve}\n                H ${left}\n                a ${curve} ${curve} 0 0 ${clockwise} -${curve} ${curve_y}\n                V ${down_2}\n                a ${curve} ${curve} 0 0 ${clockwise} ${curve} ${curve_y}\n                L ${end_x} ${end_y}\n                m -5 -5\n                l 5 5\n                l -5 5`;\n        }\n    }\n\n    draw() {\n        this.element = createSVG('path', {\n            d: this.path,\n            'data-from': this.from_task.task.id,\n            'data-to': this.to_task.task.id,\n        });\n    }\n\n    update() {\n        this.calculate_path();\n        this.element.setAttribute('d', this.path);\n    }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}