{"ast":null,"code":"var _jsxFileName = \"/home/vighnesh/Desktop/Projects/AnotherECommerce/GANTT-CHART-GENERATOR/frontend/src/components/GanttChart.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GanttChart = ({\n  tasks,\n  onTaskUpdate\n}) => {\n  _s();\n  const [viewMode, setViewMode] = useState('Day');\n  if (!tasks || tasks.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"gantt-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"empty-state\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"No tasks to display\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 10,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Add some tasks to see the Gantt chart\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, this);\n  }\n\n  // Calculate date range for the chart\n  const allDates = tasks.flatMap(task => [new Date(task.start), new Date(task.end)]);\n  const minDate = new Date(Math.min(...allDates));\n  const maxDate = new Date(Math.max(...allDates));\n\n  // Generate date columns based on view mode\n  const generateDateColumns = () => {\n    const columns = [];\n    const current = new Date(minDate);\n    while (current <= maxDate) {\n      columns.push(new Date(current));\n      switch (viewMode) {\n        case 'Day':\n          current.setDate(current.getDate() + 1);\n          break;\n        case 'Week':\n          current.setDate(current.getDate() + 7);\n          break;\n        case 'Month':\n          current.setMonth(current.getMonth() + 1);\n          break;\n        default:\n          current.setDate(current.getDate() + 1);\n      }\n    }\n    return columns;\n  };\n  const dateColumns = generateDateColumns();\n\n  // Calculate task bar width and position\n  const calculateTaskBar = task => {\n    const taskStart = new Date(task.start);\n    const taskEnd = new Date(task.end);\n    const totalDays = (maxDate - minDate) / (1000 * 60 * 60 * 24);\n    const startOffset = (taskStart - minDate) / (1000 * 60 * 60 * 24);\n    const duration = (taskEnd - taskStart) / (1000 * 60 * 60 * 24);\n    return {\n      left: `${startOffset / totalDays * 100}%`,\n      width: `${duration / totalDays * 100}%`\n    };\n  };\n  const formatDate = date => {\n    switch (viewMode) {\n      case 'Day':\n        return date.toLocaleDateString('en-US', {\n          month: 'short',\n          day: 'numeric'\n        });\n      case 'Week':\n        return `Week of ${date.toLocaleDateString('en-US', {\n          month: 'short',\n          day: 'numeric'\n        })}`;\n      case 'Month':\n        return date.toLocaleDateString('en-US', {\n          month: 'long',\n          year: 'numeric'\n        });\n      default:\n        return date.toLocaleDateString();\n    }\n  };\n  const getProgressColor = progress => {\n    if (progress === 0) return '#e2e8f0';\n    if (progress < 50) return '#ed8936';\n    if (progress < 100) return '#667eea';\n    return '#48bb78';\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"gantt-wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"gantt-controls\",\n      style: {\n        marginBottom: '1rem'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        style: {\n          marginRight: '1rem',\n          fontWeight: '500'\n        },\n        children: \"View Mode:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), ['Day', 'Week', 'Month'].map(mode => /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `btn ${viewMode === mode ? 'btn-primary' : 'btn-secondary'}`,\n        onClick: () => setViewMode(mode),\n        style: {\n          marginRight: '0.5rem'\n        },\n        children: mode\n      }, mode, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"simple-gantt-container\",\n      style: {\n        border: '1px solid #e2e8f0',\n        borderRadius: '10px',\n        background: 'white',\n        overflowX: 'auto'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          borderBottom: '2px solid #e2e8f0',\n          backgroundColor: '#f7fafc',\n          minWidth: '800px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            width: '200px',\n            padding: '1rem',\n            fontWeight: 'bold',\n            borderRight: '1px solid #e2e8f0'\n          },\n          children: \"Task Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            flex: 1,\n            display: 'flex',\n            borderLeft: '1px solid #e2e8f0'\n          },\n          children: dateColumns.map((date, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              flex: 1,\n              padding: '0.5rem',\n              textAlign: 'center',\n              fontSize: '0.8rem',\n              borderRight: index < dateColumns.length - 1 ? '1px solid #e2e8f0' : 'none',\n              minWidth: '60px'\n            },\n            children: formatDate(date)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this), tasks.map((task, taskIndex) => {\n        const taskBarStyle = calculateTaskBar(task);\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            borderBottom: taskIndex < tasks.length - 1 ? '1px solid #e2e8f0' : 'none',\n            minHeight: '60px',\n            alignItems: 'center',\n            minWidth: '800px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              width: '200px',\n              padding: '1rem',\n              borderRight: '1px solid #e2e8f0',\n              fontSize: '0.9rem'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                fontWeight: '500',\n                marginBottom: '0.25rem'\n              },\n              children: task.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                fontSize: '0.8rem',\n                color: '#666'\n              },\n              children: [task.progress || 0, \"% complete\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 17\n            }, this), task.dependencies && task.dependencies.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                fontSize: '0.7rem',\n                color: '#999',\n                marginTop: '0.25rem'\n              },\n              children: [\"Depends on: \", task.dependencies.join(', ')]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              flex: 1,\n              position: 'relative',\n              height: '40px',\n              margin: '10px 0'\n            },\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                position: 'absolute',\n                top: '50%',\n                transform: 'translateY(-50%)',\n                height: '24px',\n                backgroundColor: getProgressColor(task.progress),\n                borderRadius: '4px',\n                ...taskBarStyle,\n                minWidth: '20px',\n                display: 'flex',\n                alignItems: 'center',\n                justifyContent: 'center',\n                color: 'white',\n                fontSize: '0.7rem',\n                fontWeight: '500',\n                cursor: 'pointer',\n                transition: 'all 0.3s ease'\n              },\n              title: `${task.name}: ${new Date(task.start).toLocaleDateString()} - ${new Date(task.end).toLocaleDateString()}`,\n              onClick: () => {\n                if (onTaskUpdate) {\n                  const newProgress = prompt(`Update progress for \"${task.name}\" (0-100):`, task.progress || 0);\n                  if (newProgress !== null && !isNaN(newProgress) && newProgress >= 0 && newProgress <= 100) {\n                    onTaskUpdate(task.id, {\n                      progress: parseInt(newProgress)\n                    });\n                  }\n                }\n              },\n              children: [task.progress || 0, \"%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 15\n          }, this)]\n        }, task.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 13\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: '1rem',\n        padding: '1rem',\n        backgroundColor: '#f7fafc',\n        borderRadius: '8px',\n        border: '1px solid #e2e8f0'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        style: {\n          margin: '0 0 0.5rem 0',\n          fontSize: '0.9rem'\n        },\n        children: \"Legend:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          gap: '1rem',\n          fontSize: '0.8rem',\n          flexWrap: 'wrap'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            alignItems: 'center',\n            gap: '0.5rem'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              width: '16px',\n              height: '16px',\n              backgroundColor: '#e2e8f0',\n              borderRadius: '2px'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Not Started (0%)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            alignItems: 'center',\n            gap: '0.5rem'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              width: '16px',\n              height: '16px',\n              backgroundColor: '#ed8936',\n              borderRadius: '2px'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"In Progress (<50%)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            alignItems: 'center',\n            gap: '0.5rem'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              width: '16px',\n              height: '16px',\n              backgroundColor: '#667eea',\n              borderRadius: '2px'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"In Progress (\\u226550%)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            alignItems: 'center',\n            gap: '0.5rem'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              width: '16px',\n              height: '16px',\n              backgroundColor: '#48bb78',\n              borderRadius: '2px'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Completed (100%)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          margin: '0.5rem 0 0 0',\n          fontSize: '0.8rem',\n          color: '#666'\n        },\n        children: \"Click on task bars to update progress\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n};\n_s(GanttChart, \"QGVmhFmvx2n4FYkdD8R6nZkN/DM=\");\n_c = GanttChart;\nexport default GanttChart;\nvar _c;\n$RefreshReg$(_c, \"GanttChart\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","GanttChart","tasks","onTaskUpdate","_s","viewMode","setViewMode","length","className","children","fileName","_jsxFileName","lineNumber","columnNumber","allDates","flatMap","task","Date","start","end","minDate","Math","min","maxDate","max","generateDateColumns","columns","current","push","setDate","getDate","setMonth","getMonth","dateColumns","calculateTaskBar","taskStart","taskEnd","totalDays","startOffset","duration","left","width","formatDate","date","toLocaleDateString","month","day","year","getProgressColor","progress","style","marginBottom","marginRight","fontWeight","map","mode","onClick","border","borderRadius","background","overflowX","display","borderBottom","backgroundColor","minWidth","padding","borderRight","flex","borderLeft","index","textAlign","fontSize","taskIndex","taskBarStyle","minHeight","alignItems","name","color","dependencies","marginTop","join","position","height","margin","top","transform","justifyContent","cursor","transition","title","newProgress","prompt","isNaN","id","parseInt","gap","flexWrap","_c","$RefreshReg$"],"sources":["/home/vighnesh/Desktop/Projects/AnotherECommerce/GANTT-CHART-GENERATOR/frontend/src/components/GanttChart.js"],"sourcesContent":["import React, { useState } from 'react';\n\nconst GanttChart = ({ tasks, onTaskUpdate }) => {\n  const [viewMode, setViewMode] = useState('Day');\n\n  if (!tasks || tasks.length === 0) {\n    return (\n      <div className=\"gantt-container\">\n        <div className=\"empty-state\">\n          <h3>No tasks to display</h3>\n          <p>Add some tasks to see the Gantt chart</p>\n        </div>\n      </div>\n    );\n  }\n\n  // Calculate date range for the chart\n  const allDates = tasks.flatMap(task => [new Date(task.start), new Date(task.end)]);\n  const minDate = new Date(Math.min(...allDates));\n  const maxDate = new Date(Math.max(...allDates));\n  \n  // Generate date columns based on view mode\n  const generateDateColumns = () => {\n    const columns = [];\n    const current = new Date(minDate);\n    \n    while (current <= maxDate) {\n      columns.push(new Date(current));\n      switch (viewMode) {\n        case 'Day':\n          current.setDate(current.getDate() + 1);\n          break;\n        case 'Week':\n          current.setDate(current.getDate() + 7);\n          break;\n        case 'Month':\n          current.setMonth(current.getMonth() + 1);\n          break;\n        default:\n          current.setDate(current.getDate() + 1);\n      }\n    }\n    return columns;\n  };\n\n  const dateColumns = generateDateColumns();\n\n  // Calculate task bar width and position\n  const calculateTaskBar = (task) => {\n    const taskStart = new Date(task.start);\n    const taskEnd = new Date(task.end);\n    const totalDays = (maxDate - minDate) / (1000 * 60 * 60 * 24);\n    const startOffset = (taskStart - minDate) / (1000 * 60 * 60 * 24);\n    const duration = (taskEnd - taskStart) / (1000 * 60 * 60 * 24);\n    \n    return {\n      left: `${(startOffset / totalDays) * 100}%`,\n      width: `${(duration / totalDays) * 100}%`\n    };\n  };\n\n  const formatDate = (date) => {\n    switch (viewMode) {\n      case 'Day':\n        return date.toLocaleDateString('en-US', { month: 'short', day: 'numeric' });\n      case 'Week':\n        return `Week of ${date.toLocaleDateString('en-US', { month: 'short', day: 'numeric' })}`;\n      case 'Month':\n        return date.toLocaleDateString('en-US', { month: 'long', year: 'numeric' });\n      default:\n        return date.toLocaleDateString();\n    }\n  };\n\n  const getProgressColor = (progress) => {\n    if (progress === 0) return '#e2e8f0';\n    if (progress < 50) return '#ed8936';\n    if (progress < 100) return '#667eea';\n    return '#48bb78';\n  };\n\n  return (\n    <div className=\"gantt-wrapper\">\n      <div className=\"gantt-controls\" style={{ marginBottom: '1rem' }}>\n        <label style={{ marginRight: '1rem', fontWeight: '500' }}>\n          View Mode:\n        </label>\n        {['Day', 'Week', 'Month'].map(mode => (\n          <button\n            key={mode}\n            className={`btn ${viewMode === mode ? 'btn-primary' : 'btn-secondary'}`}\n            onClick={() => setViewMode(mode)}\n            style={{ marginRight: '0.5rem' }}\n          >\n            {mode}\n          </button>\n        ))}\n      </div>\n      \n      <div className=\"simple-gantt-container\" style={{ \n        border: '1px solid #e2e8f0', \n        borderRadius: '10px', \n        background: 'white',\n        overflowX: 'auto'\n      }}>\n        {/* Header */}\n        <div style={{ \n          display: 'flex', \n          borderBottom: '2px solid #e2e8f0', \n          backgroundColor: '#f7fafc',\n          minWidth: '800px'\n        }}>\n          <div style={{ \n            width: '200px', \n            padding: '1rem', \n            fontWeight: 'bold',\n            borderRight: '1px solid #e2e8f0'\n          }}>\n            Task Name\n          </div>\n          <div style={{ \n            flex: 1, \n            display: 'flex', \n            borderLeft: '1px solid #e2e8f0'\n          }}>\n            {dateColumns.map((date, index) => (\n              <div \n                key={index}\n                style={{ \n                  flex: 1, \n                  padding: '0.5rem', \n                  textAlign: 'center', \n                  fontSize: '0.8rem',\n                  borderRight: index < dateColumns.length - 1 ? '1px solid #e2e8f0' : 'none',\n                  minWidth: '60px'\n                }}\n              >\n                {formatDate(date)}\n              </div>\n            ))}\n          </div>\n        </div>\n\n        {/* Task Rows */}\n        {tasks.map((task, taskIndex) => {\n          const taskBarStyle = calculateTaskBar(task);\n          \n          return (\n            <div \n              key={task.id}\n              style={{ \n                display: 'flex', \n                borderBottom: taskIndex < tasks.length - 1 ? '1px solid #e2e8f0' : 'none',\n                minHeight: '60px',\n                alignItems: 'center',\n                minWidth: '800px'\n              }}\n            >\n              {/* Task Name Column */}\n              <div style={{ \n                width: '200px', \n                padding: '1rem',\n                borderRight: '1px solid #e2e8f0',\n                fontSize: '0.9rem'\n              }}>\n                <div style={{ fontWeight: '500', marginBottom: '0.25rem' }}>\n                  {task.name}\n                </div>\n                <div style={{ fontSize: '0.8rem', color: '#666' }}>\n                  {task.progress || 0}% complete\n                </div>\n                {task.dependencies && task.dependencies.length > 0 && (\n                  <div style={{ fontSize: '0.7rem', color: '#999', marginTop: '0.25rem' }}>\n                    Depends on: {task.dependencies.join(', ')}\n                  </div>\n                )}\n              </div>\n\n              {/* Timeline Column */}\n              <div style={{ \n                flex: 1, \n                position: 'relative', \n                height: '40px',\n                margin: '10px 0'\n              }}>\n                {/* Task Bar */}\n                <div \n                  style={{\n                    position: 'absolute',\n                    top: '50%',\n                    transform: 'translateY(-50%)',\n                    height: '24px',\n                    backgroundColor: getProgressColor(task.progress),\n                    borderRadius: '4px',\n                    ...taskBarStyle,\n                    minWidth: '20px',\n                    display: 'flex',\n                    alignItems: 'center',\n                    justifyContent: 'center',\n                    color: 'white',\n                    fontSize: '0.7rem',\n                    fontWeight: '500',\n                    cursor: 'pointer',\n                    transition: 'all 0.3s ease'\n                  }}\n                  title={`${task.name}: ${new Date(task.start).toLocaleDateString()} - ${new Date(task.end).toLocaleDateString()}`}\n                  onClick={() => {\n                    if (onTaskUpdate) {\n                      const newProgress = prompt(`Update progress for \"${task.name}\" (0-100):`, task.progress || 0);\n                      if (newProgress !== null && !isNaN(newProgress) && newProgress >= 0 && newProgress <= 100) {\n                        onTaskUpdate(task.id, { progress: parseInt(newProgress) });\n                      }\n                    }\n                  }}\n                >\n                  {task.progress || 0}%\n                </div>\n              </div>\n            </div>\n          );\n        })}\n      </div>\n\n      {/* Legend */}\n      <div style={{ \n        marginTop: '1rem', \n        padding: '1rem', \n        backgroundColor: '#f7fafc', \n        borderRadius: '8px',\n        border: '1px solid #e2e8f0'\n      }}>\n        <h4 style={{ margin: '0 0 0.5rem 0', fontSize: '0.9rem' }}>Legend:</h4>\n        <div style={{ display: 'flex', gap: '1rem', fontSize: '0.8rem', flexWrap: 'wrap' }}>\n          <div style={{ display: 'flex', alignItems: 'center', gap: '0.5rem' }}>\n            <div style={{ width: '16px', height: '16px', backgroundColor: '#e2e8f0', borderRadius: '2px' }}></div>\n            <span>Not Started (0%)</span>\n          </div>\n          <div style={{ display: 'flex', alignItems: 'center', gap: '0.5rem' }}>\n            <div style={{ width: '16px', height: '16px', backgroundColor: '#ed8936', borderRadius: '2px' }}></div>\n            <span>In Progress (&lt;50%)</span>\n          </div>\n          <div style={{ display: 'flex', alignItems: 'center', gap: '0.5rem' }}>\n            <div style={{ width: '16px', height: '16px', backgroundColor: '#667eea', borderRadius: '2px' }}></div>\n            <span>In Progress (≥50%)</span>\n          </div>\n          <div style={{ display: 'flex', alignItems: 'center', gap: '0.5rem' }}>\n            <div style={{ width: '16px', height: '16px', backgroundColor: '#48bb78', borderRadius: '2px' }}></div>\n            <span>Completed (100%)</span>\n          </div>\n        </div>\n        <p style={{ margin: '0.5rem 0 0 0', fontSize: '0.8rem', color: '#666' }}>\n          Click on task bars to update progress\n        </p>\n      </div>\n    </div>\n  );\n};\n\nexport default GanttChart;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}