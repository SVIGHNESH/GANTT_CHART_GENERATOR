{"ast":null,"code":"import axios from 'axios';\n\n// Create axios instance with base configuration\nconst api = axios.create({\n  baseURL: process.env.REACT_APP_API_URL || 'http://localhost:5000/api',\n  timeout: 10000,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Request interceptor\napi.interceptors.request.use(config => {\n  var _config$method;\n  console.log(`Making ${(_config$method = config.method) === null || _config$method === void 0 ? void 0 : _config$method.toUpperCase()} request to ${config.url}`);\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\n\n// Response interceptor\napi.interceptors.response.use(response => {\n  return response.data;\n}, error => {\n  var _error$response, _error$response2;\n  console.error('API Error:', ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error.message);\n  return Promise.reject(((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data) || error);\n});\n\n// Project API calls\nexport const projectService = {\n  // Get all projects\n  getAllProjects: async () => {\n    const response = await api.get('/projects');\n    return response.data;\n  },\n  // Get a single project by ID\n  getProject: async id => {\n    const response = await api.get(`/projects/${id}`);\n    return response.data;\n  },\n  // Create a new project\n  createProject: async projectData => {\n    const response = await api.post('/projects', projectData);\n    return response.data;\n  },\n  // Update a project\n  updateProject: async (id, projectData) => {\n    const response = await api.put(`/projects/${id}`, projectData);\n    return response.data;\n  },\n  // Delete a project\n  deleteProject: async id => {\n    const response = await api.delete(`/projects/${id}`);\n    return response;\n  },\n  // Get project progress\n  getProjectProgress: async id => {\n    const response = await api.get(`/projects/${id}/progress`);\n    return response.data;\n  }\n};\n\n// Task API calls\nexport const taskService = {\n  // Get all tasks for a project\n  getProjectTasks: async projectId => {\n    const response = await api.get(`/tasks/${projectId}`);\n    return response.data;\n  },\n  // Get a specific task\n  getTask: async (projectId, taskId) => {\n    const response = await api.get(`/tasks/${projectId}/${taskId}`);\n    return response.data;\n  },\n  // Add a new task to a project\n  addTask: async (projectId, taskData) => {\n    const response = await api.post(`/tasks/${projectId}`, taskData);\n    return response.data;\n  },\n  // Update a task\n  updateTask: async (projectId, taskId, taskData) => {\n    const response = await api.put(`/tasks/${projectId}/${taskId}`, taskData);\n    return response.data;\n  },\n  // Delete a task\n  deleteTask: async (projectId, taskId) => {\n    const response = await api.delete(`/tasks/${projectId}/${taskId}`);\n    return response;\n  }\n};\n\n// Utility functions\nexport const formatDateForAPI = date => {\n  if (!date) return '';\n  return new Date(date).toISOString().split('T')[0];\n};\nexport const formatDateForDisplay = date => {\n  if (!date) return '';\n  return new Date(date).toLocaleDateString();\n};\nexport const generateTaskId = () => {\n  return 'task_' + Date.now() + '_' + Math.random().toString(36).substr(2, 9);\n};\nexport default api;","map":{"version":3,"names":["axios","api","create","baseURL","process","env","REACT_APP_API_URL","timeout","headers","interceptors","request","use","config","_config$method","console","log","method","toUpperCase","url","error","Promise","reject","response","data","_error$response","_error$response2","message","projectService","getAllProjects","get","getProject","id","createProject","projectData","post","updateProject","put","deleteProject","delete","getProjectProgress","taskService","getProjectTasks","projectId","getTask","taskId","addTask","taskData","updateTask","deleteTask","formatDateForAPI","date","Date","toISOString","split","formatDateForDisplay","toLocaleDateString","generateTaskId","now","Math","random","toString","substr"],"sources":["/home/vighnesh/Desktop/Projects/AnotherECommerce/GANTT-CHART-GENERATOR/frontend/src/services/projectService.js"],"sourcesContent":["import axios from 'axios';\n\n// Create axios instance with base configuration\nconst api = axios.create({\n  baseURL: process.env.REACT_APP_API_URL || 'http://localhost:5000/api',\n  timeout: 10000,\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\n// Request interceptor\napi.interceptors.request.use(\n  (config) => {\n    console.log(`Making ${config.method?.toUpperCase()} request to ${config.url}`);\n    return config;\n  },\n  (error) => {\n    return Promise.reject(error);\n  }\n);\n\n// Response interceptor\napi.interceptors.response.use(\n  (response) => {\n    return response.data;\n  },\n  (error) => {\n    console.error('API Error:', error.response?.data || error.message);\n    return Promise.reject(error.response?.data || error);\n  }\n);\n\n// Project API calls\nexport const projectService = {\n  // Get all projects\n  getAllProjects: async () => {\n    const response = await api.get('/projects');\n    return response.data;\n  },\n\n  // Get a single project by ID\n  getProject: async (id) => {\n    const response = await api.get(`/projects/${id}`);\n    return response.data;\n  },\n\n  // Create a new project\n  createProject: async (projectData) => {\n    const response = await api.post('/projects', projectData);\n    return response.data;\n  },\n\n  // Update a project\n  updateProject: async (id, projectData) => {\n    const response = await api.put(`/projects/${id}`, projectData);\n    return response.data;\n  },\n\n  // Delete a project\n  deleteProject: async (id) => {\n    const response = await api.delete(`/projects/${id}`);\n    return response;\n  },\n\n  // Get project progress\n  getProjectProgress: async (id) => {\n    const response = await api.get(`/projects/${id}/progress`);\n    return response.data;\n  },\n};\n\n// Task API calls\nexport const taskService = {\n  // Get all tasks for a project\n  getProjectTasks: async (projectId) => {\n    const response = await api.get(`/tasks/${projectId}`);\n    return response.data;\n  },\n\n  // Get a specific task\n  getTask: async (projectId, taskId) => {\n    const response = await api.get(`/tasks/${projectId}/${taskId}`);\n    return response.data;\n  },\n\n  // Add a new task to a project\n  addTask: async (projectId, taskData) => {\n    const response = await api.post(`/tasks/${projectId}`, taskData);\n    return response.data;\n  },\n\n  // Update a task\n  updateTask: async (projectId, taskId, taskData) => {\n    const response = await api.put(`/tasks/${projectId}/${taskId}`, taskData);\n    return response.data;\n  },\n\n  // Delete a task\n  deleteTask: async (projectId, taskId) => {\n    const response = await api.delete(`/tasks/${projectId}/${taskId}`);\n    return response;\n  },\n};\n\n// Utility functions\nexport const formatDateForAPI = (date) => {\n  if (!date) return '';\n  return new Date(date).toISOString().split('T')[0];\n};\n\nexport const formatDateForDisplay = (date) => {\n  if (!date) return '';\n  return new Date(date).toLocaleDateString();\n};\n\nexport const generateTaskId = () => {\n  return 'task_' + Date.now() + '_' + Math.random().toString(36).substr(2, 9);\n};\n\nexport default api;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}